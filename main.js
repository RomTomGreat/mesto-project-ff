(()=>{"use strict";function e(e){e.classList.add("popup_is-opened"),document.addEventListener("keydown",t),e.addEventListener("click",n)}function t(e){"Escape"===e.key&&r(document.querySelector(".popup_is-opened"))}function n(e){(e.currentTarget===e.target||e.target.classList.contains("popup__close"))&&r(e.currentTarget)}function r(e){e.classList.remove("popup_is-opened"),document.removeEventListener("keydown",t),e.removeEventListener("click",n)}function o(e,t,n,r){var o=document.querySelector("#card-template").content.querySelector(".card").cloneNode(!0),c=o.querySelector(".card__image");return c.src=e.link,c.alt=e.name,c.addEventListener("click",(function(){r(e)})),o.querySelector(".card__delete-button").addEventListener("click",t),o.querySelector(".card__description").querySelector(".card__title").textContent=e.name,o.querySelector(".card__counter").textContent=e.likes.length,o.querySelector(".card__like-button").addEventListener("click",n),o}function c(e){e.target.closest(".card").remove()}function a(e){e.target.closest(".card__like-button").classList.toggle("card__like-button_is-active")}var u=function(e,t,n){var r=e.querySelector(".".concat(t.id,"-error"));t.classList.remove(n.inputErrorClass),r.classList.remove(n.errorClass),r.textContent=""},i=function(e,t,n){!function(e){return e.some((function(e){return!e.validity.valid}))}(e)?(t.classList.remove(n.inactiveButtonClass),t.disabled=!1):(t.classList.add(n.inactiveButtonClass),t.disabled=!0)},s=function(e,t){Array.from(e.querySelectorAll(t.inputSelector)).forEach((function(t,n){u(e,t,n)}))},l={baseUrl:"https://nomoreparties.co/v1/wff-cohort-2",headers:{authorization:"bb1fee31-957c-4b3e-9d5c-e5a39df6a8a4","Content-Type":"application/json"}};function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var p=document.querySelector(".popup_type_edit");p.classList.add("popup_is-animated");var f=document.querySelector(".popup_type_new-card");f.classList.add("popup_is-animated");var m=document.querySelector(".popup_type_image");m.classList.add("popup_is-animated");var _=document.querySelector(".profile__title"),y=document.querySelector(".profile__description"),v=document.querySelector(".profile__edit-button"),h=document.querySelector(".profile__add-button"),S=document.querySelector(".popup__image"),b=document.querySelector(".popup__caption"),g=document.forms["edit-profile"],q=document.querySelector(".popup__input_type_name"),C=document.querySelector(".popup__input_type_description"),L=document.forms["new-place"],E=document.querySelector(".popup__input_type_card-name"),k=document.querySelector(".popup__input_type_url"),j=document.querySelector(".places__list");function x(t){S.src=t.link,S.alt=t.name,b.textContent=t.name,e(m)}g.addEventListener("submit",(function(e){var t,n;e.preventDefault(),_.textContent=q.value,y.textContent=C.value,(t=q.value,n=C.value,fetch("".concat(l.baseUrl,"/users/me"),{method:"PATCH",headers:l.headers,body:JSON.stringify({name:t,about:n})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).catch((function(e){console.log(e)}))).then((function(t){_.textContent=t.name,y.textContent=t.about,e.target.reset(),r(p),console.log(t)}))})),L.addEventListener("submit",(function(e){var t;e.preventDefault(),(t={name:E.value,link:k.value},fetch("".concat(l.baseUrl,"/cards"),{method:"POST",headers:l.headers,body:JSON.stringify(t)}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).catch((function(e){console.log(e)}))).then((function(t){var n=o(t,c,a,x);j.prepend(n),e.target.reset(),r(f)}))})),v.addEventListener("click",(function(){q.value=_.textContent,C.value=y.textContent,s(p,A),e(p)})),h.addEventListener("click",(function(){s(f,A),e(f)})),Promise.all([fetch("".concat(l.baseUrl,"/cards"),{method:"GET",headers:l.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).catch((function(e){console.log(e)})),fetch("".concat(l.baseUrl,"/users/me"),{method:"GET",headers:l.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).catch((function(e){console.log(e)}))]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,c,a,u=[],i=!0,s=!1;try{if(c=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;i=!1}else for(;!(i=(r=c.call(n)).done)&&(u.push(r.value),u.length!==t);i=!0);}catch(e){s=!0,o=e}finally{try{if(!i&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(t,n)||function(e,t){if(e){if("string"==typeof e)return d(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?d(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),u=r[0],i=r[1];_.textContent=i.name,y.textContent=i.about,u.forEach((function(e){j.append(o(e,c,a,x))}))})).catch((function(e){console.log(e)}));var A={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};!function(e){Array.from(document.querySelectorAll(e.formSelector)).forEach((function(t){!function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector);i(n,r,t),n.forEach((function(o){o.addEventListener("input",(function(){!function(e,t,n){t.validity.patternMismatch?t.setCustomValidity(t.dataset.errorMessage):t.setCustomValidity(""),t.validity.valid?u(e,t,n):function(e,t,n,r){var o=e.querySelector(".".concat(t.id,"-error"));t.classList.add(r.inputErrorClass),o.textContent=n,o.classList.add(r.errorClass)}(e,t,t.validationMessage,n)}(e,o,t),i(n,r,t)}))}))}(t,e)}))}(A)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,