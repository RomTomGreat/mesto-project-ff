(()=>{"use strict";function e(e){e.classList.add("popup_is-opened"),document.addEventListener("keydown",t),e.addEventListener("click",n)}function t(e){"Escape"===e.key&&r(document.querySelector(".popup_is-opened"))}function n(e){(e.currentTarget===e.target||e.target.classList.contains("popup__close"))&&r(e.currentTarget)}function r(e){e.classList.remove("popup_is-opened"),document.removeEventListener("keydown",t),e.removeEventListener("click",n)}function o(e,t,n,r){var o=document.querySelector("#card-template").content.querySelector(".card").cloneNode(!0),c=o.querySelector(".card__image");return c.src=e.link,c.alt=e.name,c.addEventListener("click",(function(){r(e)})),o.querySelector(".card__delete-button").addEventListener("click",t),o.querySelector(".card__description").querySelector(".card__title").textContent=e.name,o.querySelector(".card__counter").textContent=e.likes.length,o.querySelector(".card__like-button").addEventListener("click",n),o}function c(e){e.target.closest(".card").remove()}function a(e){e.target.closest(".card__like-button").classList.toggle("card__like-button_is-active")}var u=function(e,t,n){var r=e.querySelector(".".concat(t.id,"-error"));t.classList.remove(n.inputErrorClass),r.classList.remove(n.errorClass),r.textContent=""},i=function(e){var t=Array.from(e.querySelectorAll(".popup__input")),n=e.querySelector(".popup__button");console.log(n),t.forEach((function(r){r.addEventListener("input",(function(){!function(e,t,n){t.validity.patternMismatch?t.setCustomValidity(t.dataset.errorMessage):t.setCustomValidity(""),t.validity.valid?u(e,t,n):function(e,t,n,r){var o=e.querySelector(".".concat(t.id,"-error"));t.classList.add(r.inputErrorClass),o.textContent=n,o.classList.add(r.errorClass)}(e,t,t.validationMessage,n)}(e,r,validationConfig),l(t,n)}))}))},l=function(e,t){!function(e){return e.some((function(e){return!e.validity.valid}))}(e)?(t.disabled=!1,t.classList.remove("popup__button_disabled")):(t.disabled=!0,t.classList.add("popup__button_disabled"))},s=function(e,t){Array.from(e.querySelectorAll(t.inputSelector)).forEach((function(n){u(e,n,t)}))},d={baseUrl:"https://nomoreparties.co/v1/wff-cohort-2",headers:{authorization:"bb1fee31-957c-4b3e-9d5c-e5a39df6a8a4","Content-Type":"application/json"}};function p(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var f=document.querySelector(".popup_type_edit");f.classList.add("popup_is-animated");var _=document.querySelector(".popup_type_new-card");_.classList.add("popup_is-animated");var m=document.querySelector(".popup_type_image");m.classList.add("popup_is-animated"),document.querySelector(".card__like-button");var y=document.querySelector(".profile__title"),v=document.querySelector(".profile__description"),b=document.querySelector(".profile__edit-button"),h=document.querySelector(".profile__add-button"),S=document.querySelector(".popup__image"),g=document.querySelector(".popup__caption"),q=document.forms["edit-profile"],C=document.querySelector(".popup__input_type_name"),L=document.querySelector(".popup__input_type_description"),E=document.forms["new-place"],k=document.querySelector(".popup__input_type_card-name"),x=document.querySelector(".popup__input_type_url"),A=document.querySelector(".places__list");function j(t){S.src=t.link,S.alt=t.name,g.textContent=t.name,e(m)}q.addEventListener("submit",(function(e){e.preventDefault(),y.textContent=C.value,v.textContent=L.value,T(C.value,L.value).then((function(t){y.textContent=t.name,v.textContent=t.about,e.target.reset(),r(f),console.log(t)}))})),E.addEventListener("submit",(function(e){var t;e.preventDefault(),(t={name:k.value,link:x.value},fetch("".concat(d.baseUrl,"/cards"),{method:"POST",headers:d.headers,body:JSON.stringify(t)}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))).then((function(t){console.log(t);var n=o(t,c,a,j);A.prepend(n),e.target.reset(),r(_)}))})),b.addEventListener("click",(function(){C.value=y.textContent,L.value=v.textContent,s(f,w),e(f)})),h.addEventListener("click",(function(){s(_,w),e(_)}));var w={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};Promise.all([fetch("".concat(d.baseUrl,"/cards"),{method:"GET",headers:d.headers}).then((function(e){return e.json()})),fetch("".concat(d.baseUrl,"/users/me"),{method:"GET",headers:d.headers}).then((function(e){return e.json()})).catch((function(e){console.log(e)}))]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,c,a,u=[],i=!0,l=!1;try{if(c=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;i=!1}else for(;!(i=(r=c.call(n)).done)&&(u.push(r.value),u.length!==t);i=!0);}catch(e){l=!0,o=e}finally{try{if(!i&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return u}}(t,n)||function(e,t){if(e){if("string"==typeof e)return p(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?p(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),u=r[0],i=r[1];y.textContent=i.name,v.textContent=i.about,u.forEach((function(e){A.append(o(e,c,a,j))}))})).catch((function(e){console.log(e)}));var T=function(e,t){return fetch("".concat(d.baseUrl,"/users/me"),{method:"PATCH",headers:d.headers,body:JSON.stringify({name:e,about:t})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).catch((function(e){console.log(e)}))};!function(e){Array.from(document.querySelectorAll(e.inputSelector)).forEach((function(e){e.addEventListener("submit",(function(t){t.preventDefault(),i(e)}))}))}(w)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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T0MsUUFBTyxhQUFhLENBQ3pDOEIsT0FBUSxRQUNSN0IsUUFBU0YsRUFBT0UsUUFDaEI4QixLQUFNQyxLQUFLQyxVQUFVLENBQ25CNUUsS0FBTWdHLEVBQ04zQixNQUFPNEIsTUFJVjlCLE1BQUssU0FBQ0MsR0FDTCxPQUFJQSxFQUFPUyxHQUNGVCxFQUFPVSxPQUVQQyxRQUFRQyxPQUFPLFdBQURsRSxPQUFZc0QsRUFBT2EsUUFFNUMsSUFNQ1EsT0FBTSxTQUFDQyxHQUNObEUsUUFBUUMsSUFBSWlFLEVBQ2QsR0FDRixHRnhGeUIsU0FBQzlFLEdBQ1BRLE1BQU1DLEtBQUs3QyxTQUFTOEMsaUJBQWlCVixFQUFpQjZCLGdCQUM5RGYsU0FBUSxTQUFDaEIsR0FDaEJBLEVBQVlqQyxpQkFBaUIsVUFBVSxTQUFVNEIsR0FDL0NBLEVBQUkyRCxpQkFDSjlDLEVBQWtCUixFQUNwQixHQUNGLEdBQ0YsQ0UySkF3RixDQUFpQnRGLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly95YW5kZXgtcHJha3Rpa3VtLy4vc3JjL2NvbXBvbmVudHMvbW9kYWxzLmpzIiwid2VicGFjazovL3lhbmRleC1wcmFrdGlrdW0vLi9zcmMvY29tcG9uZW50cy9jYXJkLmpzIiwid2VicGFjazovL3lhbmRleC1wcmFrdGlrdW0vLi9zcmMvY29tcG9uZW50cy92YWxpZGF0aW9uLmpzIiwid2VicGFjazovL3lhbmRleC1wcmFrdGlrdW0vLi9zcmMvY29tcG9uZW50cy9hcGkuanMiLCJ3ZWJwYWNrOi8veWFuZGV4LXByYWt0aWt1bS8uL3NyYy9jb21wb25lbnRzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIG9wZW5Qb3B1cChwb3B1cCkge1xyXG4gIHBvcHVwLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9pcy1vcGVuZWRcIik7XHJcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgY2xvc2VFc2NQb3B1cCk7XHJcbiAgcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGhhbmRsZUNsb3NlTW9kYWxXaW5kb3dPdmVybGF5Q2xpY2spO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjbG9zZUVzY1BvcHVwKGV2ZW50KSB7XHJcbiAgaWYgKGV2ZW50LmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgY2xvc2VQb3B1cChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfaXMtb3BlbmVkJykpO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlQ2xvc2VNb2RhbFdpbmRvd092ZXJsYXlDbGljayhldmVudCkge1xyXG4gIGlmIChldmVudC5jdXJyZW50VGFyZ2V0ID09PSBldmVudC50YXJnZXQgfHwgZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygncG9wdXBfX2Nsb3NlJykpIHtcclxuICAgIGNsb3NlUG9wdXAoZXZlbnQuY3VycmVudFRhcmdldCk7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBjbG9zZVBvcHVwKHBvcHVwKSB7XHJcbiAgcG9wdXAuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfaXMtb3BlbmVkJyk7XHJcbiAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgY2xvc2VFc2NQb3B1cCk7XHJcbiAgcG9wdXAucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGhhbmRsZUNsb3NlTW9kYWxXaW5kb3dPdmVybGF5Q2xpY2spO1xyXG59XHJcblxyXG5leHBvcnQge29wZW5Qb3B1cCwgY2xvc2VQb3B1cH07IiwiLy8g0KTRg9C90LrRhtC40Y8g0YHQvtC30LTQsNC90LjRjyDQutCw0YDRgtC+0YfQutC4IC8vXHJcbmZ1bmN0aW9uIGNyZWF0ZUNhcmQoaXRlbSwgcmVtb3ZlLCBsaWtlLCBzaG93KSB7XHJcbiAgLy8g0KLQtdC80L/Qu9C10LnRgiDQutCw0YDRgtC+0YfQutC4IC8vXHJcbiAgY29uc3QgY2FyZFRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NhcmQtdGVtcGxhdGUnKS5jb250ZW50O1xyXG5cclxuICBjb25zdCBjYXJkID0gY2FyZFRlbXBsYXRlLnF1ZXJ5U2VsZWN0b3IoJy5jYXJkJykuY2xvbmVOb2RlKHRydWUpO1xyXG4gIFxyXG4gIGNvbnN0IGNhcmRJbWFnZSA9IGNhcmQucXVlcnlTZWxlY3RvcignLmNhcmRfX2ltYWdlJyk7XHJcblxyXG4gIGNhcmRJbWFnZS5zcmMgPSBpdGVtLmxpbms7XHJcbiAgY2FyZEltYWdlLmFsdCA9IGl0ZW0ubmFtZTtcclxuICBjYXJkSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7IHNob3cgKGl0ZW0pIH0pO1xyXG4gIFxyXG4gIGNvbnN0IGNhcmREZWxldGUgPSBjYXJkLnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19kZWxldGUtYnV0dG9uJyk7XHJcbiAgY2FyZERlbGV0ZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHJlbW92ZSk7XHJcbiAgXHJcbiAgY29uc3QgY2FyZEZvb3RlckNvbnRhaW5lciA9IGNhcmQucXVlcnlTZWxlY3RvcignLmNhcmRfX2Rlc2NyaXB0aW9uJyk7XHJcbiAgXHJcbiAgY29uc3QgY2FyZFRpdGxlID0gY2FyZEZvb3RlckNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fdGl0bGUnKTtcclxuICBjYXJkVGl0bGUudGV4dENvbnRlbnQgPSBpdGVtLm5hbWU7XHJcbiAgXHJcblxyXG4gIGNvbnN0IGNhcmRDb3VudGVyID0gY2FyZC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fY291bnRlcicpO1xyXG4gIGNhcmRDb3VudGVyLnRleHRDb250ZW50ID0gaXRlbS5saWtlcy5sZW5ndGg7XHJcblxyXG4gIGNvbnN0IGNhcmRMaWtlID0gY2FyZC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fbGlrZS1idXR0b24nKTtcclxuICBjYXJkTGlrZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGxpa2UpO1xyXG4gIFxyXG4gIHJldHVybiBjYXJkO1xyXG59XHJcbi8vINCk0YPQvdC60YbQuNGPINGD0LTQsNC70LXQvdC40Y8g0LrQsNGA0YLQvtGH0LrQuCAvL1xyXG5mdW5jdGlvbiBkZWxldGVDYXJkIChldnQpIHtcclxuICBjb25zdCB0cmFzaCA9IGV2dC50YXJnZXQuY2xvc2VzdCgnLmNhcmQnKTtcclxuICB0cmFzaC5yZW1vdmUoKTtcclxufVxyXG4vLyDQpNGD0L3QutGG0LjRjyDQvdCw0LbQsNGC0LjRjyDQvdCwINC70LDQudC6IC8vXHJcbmZ1bmN0aW9uIHByZXNzTGlrZSAoZXZ0KSB7XHJcbiAgY29uc3QgaGVhbHRoID0gZXZ0LnRhcmdldC5jbG9zZXN0KCcuY2FyZF9fbGlrZS1idXR0b24nKTtcclxuICBoZWFsdGguY2xhc3NMaXN0LnRvZ2dsZSgnY2FyZF9fbGlrZS1idXR0b25faXMtYWN0aXZlJyk7XHJcbn1cclxuXHJcbmV4cG9ydCB7Y3JlYXRlQ2FyZCwgZGVsZXRlQ2FyZCwgcHJlc3NMaWtlfTsiLCJjb25zdCBzaG93SW5wdXRFcnJvciA9IChmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UsIHZhbGlkYXRpb25Db25maWcpID0+IHtcclxuICBjb25zdCBlcnJvckVsZW1lbnQgPSBmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQodmFsaWRhdGlvbkNvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xyXG4gIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcclxuICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh2YWxpZGF0aW9uQ29uZmlnLmVycm9yQ2xhc3MpO1xyXG59O1xyXG4gIFxyXG5jb25zdCBoaWRlSW5wdXRFcnJvciA9IChmb3JtRWxlbWVudCwgaW5wdXRFbGVtZW50LCB2YWxpZGF0aW9uQ29uZmlnKSA9PiB7XHJcbiAgY29uc3QgZXJyb3JFbGVtZW50ID0gZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHZhbGlkYXRpb25Db25maWcuaW5wdXRFcnJvckNsYXNzKTtcclxuICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh2YWxpZGF0aW9uQ29uZmlnLmVycm9yQ2xhc3MpO1xyXG4gIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9ICcnO1xyXG59O1xyXG4gIFxyXG5jb25zdCBjaGVja0lucHV0VmFsaWRpdHkgPSAoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCwgdmFsaWRhdGlvbkNvbmZpZykgPT4ge1xyXG4gIGlmIChpbnB1dEVsZW1lbnQudmFsaWRpdHkucGF0dGVybk1pc21hdGNoKSB7XHJcbiAgICBpbnB1dEVsZW1lbnQuc2V0Q3VzdG9tVmFsaWRpdHkoaW5wdXRFbGVtZW50LmRhdGFzZXQuZXJyb3JNZXNzYWdlKTtcclxuICB9IGVsc2Uge1xyXG4gICAgaW5wdXRFbGVtZW50LnNldEN1c3RvbVZhbGlkaXR5KFwiXCIpO1xyXG4gIH1cclxuXHJcbiAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgIHNob3dJbnB1dEVycm9yKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSwgdmFsaWRhdGlvbkNvbmZpZyk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGhpZGVJbnB1dEVycm9yKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIHZhbGlkYXRpb25Db25maWcpO1xyXG4gIH1cclxufTtcclxuICBcclxuY29uc3Qgc2V0RXZlbnRMaXN0ZW5lcnMgPSAoZm9ybUVsZW1lbnQpID0+IHtcclxuICBjb25zdCBpbnB1dExpc3QgPSBBcnJheS5mcm9tKGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wb3B1cF9faW5wdXQnKSk7XHJcbiAgY29uc3QgYnV0dG9uRWxlbWVudCA9IGZvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fYnV0dG9uJyk7XHJcbiAgY29uc29sZS5sb2coYnV0dG9uRWxlbWVudCk7XHJcbiAgaW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgZnVuY3Rpb24gKCkge1xyXG4gICAgICBjaGVja0lucHV0VmFsaWRpdHkoZm9ybUVsZW1lbnQsIGlucHV0RWxlbWVudCwgdmFsaWRhdGlvbkNvbmZpZyk7XHJcbiAgICAgIHRvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCk7XHJcbiAgICB9KTtcclxuICB9KTtcclxufTtcclxuICBcclxuY29uc3QgaGFzSW52YWxpZElucHV0ID0gKGlucHV0TGlzdCkgPT4ge1xyXG4gIHJldHVybiBpbnB1dExpc3Quc29tZSgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICByZXR1cm4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcclxuICB9KTtcclxufVxyXG4gIFxyXG5jb25zdCB0b2dnbGVCdXR0b25TdGF0ZSA9IChpbnB1dExpc3QsIGJ1dHRvbkVsZW1lbnQpID0+IHtcclxuICBpZiAoaGFzSW52YWxpZElucHV0KGlucHV0TGlzdCkpIHtcclxuICAgIGJ1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlO1xyXG4gICAgYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9fYnV0dG9uX2Rpc2FibGVkJyk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGJ1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcclxuICAgIGJ1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfX2J1dHRvbl9kaXNhYmxlZCcpO1xyXG4gIH1cclxufVxyXG4gIFxyXG5jb25zdCBlbmFibGVWYWxpZGF0aW9uID0gKHZhbGlkYXRpb25Db25maWcpID0+IHtcclxuICBjb25zdCBmb3JtTGlzdCA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCh2YWxpZGF0aW9uQ29uZmlnLmlucHV0U2VsZWN0b3IpKTtcclxuICBmb3JtTGlzdC5mb3JFYWNoKChmb3JtRWxlbWVudCkgPT4ge1xyXG4gICAgZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgZnVuY3Rpb24gKGV2dCkge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgc2V0RXZlbnRMaXN0ZW5lcnMoZm9ybUVsZW1lbnQpO1xyXG4gICAgfSlcclxuICB9KVxyXG59XHJcbiAgXHJcbmNvbnN0IGNsZWFyVmFsaWRhdGlvbiA9IChmb3JtRWxlbWVudCwgdmFsaWRhdGlvbkNvbmZpZykgPT4ge1xyXG4gIGNvbnN0IGZvcm1MaXN0ID0gQXJyYXkuZnJvbShmb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHZhbGlkYXRpb25Db25maWcuaW5wdXRTZWxlY3RvcikpO1xyXG4gIGZvcm1MaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gIGhpZGVJbnB1dEVycm9yKGZvcm1FbGVtZW50LCBpbnB1dEVsZW1lbnQsIHZhbGlkYXRpb25Db25maWcpO1xyXG4gIH0pO1xyXG59O1xyXG4gIFxyXG5leHBvcnQge2VuYWJsZVZhbGlkYXRpb24sIGNsZWFyVmFsaWRhdGlvbn07IiwiZXhwb3J0IGNvbnN0IGNvbmZpZyA9IHtcclxuICBiYXNlVXJsOiAnaHR0cHM6Ly9ub21vcmVwYXJ0aWVzLmNvL3YxL3dmZi1jb2hvcnQtMicsXHJcbiAgaGVhZGVyczoge1xyXG4gICAgYXV0aG9yaXphdGlvbjogJ2JiMWZlZTMxLTk1N2MtNGIzZS05ZDVjLWU1YTM5ZGY2YThhNCcsXHJcbiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0VXNlckRhdGEgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIGZldGNoKGAke2NvbmZpZy5iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgIG1ldGhvZDogJ0dFVCcsXHJcbiAgICBoZWFkZXJzOiBjb25maWcuaGVhZGVyc1xyXG4gIH0pXHJcbiAgXHJcbiAgLnRoZW4ocmVzdWx0ID0+IHJlc3VsdC5qc29uKCkpXHJcbiAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gIH0pO1xyXG59XHJcblxyXG5leHBvcnQgY29uc3QgaW5pdGlhbENhcmRzID0gKCkgPT4ge1xyXG4gIHJldHVybiBmZXRjaChgJHtjb25maWcuYmFzZVVybH0vY2FyZHNgLCB7XHJcbiAgICBtZXRob2Q6ICdHRVQnLFxyXG4gICAgaGVhZGVyczogY29uZmlnLmhlYWRlcnNcclxuICB9KVxyXG4gIC50aGVuKHJlc3VsdCA9PiByZXN1bHQuanNvbigpKVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgY3JlYXRlQ2FyZE5ldyA9IChkYXRhKSA9PiB7XHJcbiAgcmV0dXJuIGZldGNoKGAke2NvbmZpZy5iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgaGVhZGVyczogY29uZmlnLmhlYWRlcnMsXHJcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKVxyXG4gIH0pXHJcblxyXG4gIC50aGVuKChyZXN1bHQpID0+IHtcclxuICAgIGlmIChyZXN1bHQub2spIHtcclxuICAgICAgcmV0dXJuIHJlc3VsdC5qc29uKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsDogJHtyZXN1bHQuc3RhdHVzfWApO1xyXG4gICAgfVxyXG4gIH0pXHJcbn0iLCJpbXBvcnQgJy4uL3BhZ2VzL2luZGV4LmNzcyc7XHJcbi8vaW1wb3J0IHtpbml0aWFsQ2FyZHN9IGZyb20gJy4vY2FyZHMnO1xyXG5pbXBvcnQge29wZW5Qb3B1cCwgY2xvc2VQb3B1cH0gZnJvbSAnLi9tb2RhbHMnO1xyXG5pbXBvcnQge2NyZWF0ZUNhcmQsIGRlbGV0ZUNhcmQsIHByZXNzTGlrZX0gZnJvbSAnLi9jYXJkJztcclxuaW1wb3J0IHtlbmFibGVWYWxpZGF0aW9uLCBjbGVhclZhbGlkYXRpb259IGZyb20gJy4vdmFsaWRhdGlvbic7XHJcbmltcG9ydCB7Y29uZmlnLCBjcmVhdGVDYXJkTmV3LCBpbml0aWFsQ2FyZHMsIGdldFVzZXJEYXRhfSBmcm9tICcuL2FwaSc7XHJcblxyXG5jb25zdCBwb3B1cFR5cGVFZGl0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX3R5cGVfZWRpdCcpO1xyXG5wb3B1cFR5cGVFZGl0LmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9pcy1hbmltYXRlZFwiKTtcclxuY29uc3QgcG9wdXBUeXBlTmV3Q2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF90eXBlX25ldy1jYXJkJyk7XHJcbnBvcHVwVHlwZU5ld0NhcmQuY2xhc3NMaXN0LmFkZChcInBvcHVwX2lzLWFuaW1hdGVkXCIpO1xyXG5jb25zdCBwb3B1cFR5cGVJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF90eXBlX2ltYWdlJyk7XHJcbnBvcHVwVHlwZUltYWdlLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9pcy1hbmltYXRlZFwiKTtcclxuY29uc3QgY2FyZExpa2VCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fbGlrZS1idXR0b24nKTtcclxuY29uc3QgcHJvZmlsZVRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX3RpdGxlJyk7XHJcbmNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19kZXNjcmlwdGlvbicpO1xyXG5jb25zdCBwcm9maWxlRWRpdEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19lZGl0LWJ1dHRvbicpO1xyXG5jb25zdCBwcm9maWxlQWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2FkZC1idXR0b24nKTtcclxuY29uc3QgcG9wdXBJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW1hZ2UnKTtcclxuY29uc3QgcG9wdXBJbWFnZUNhcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2NhcHRpb24nKTtcclxuLy8g0J3QsNGF0L7QtNC40LwgMSDRhNC+0YDQvNGDINCyIERPTSAvL1xyXG5jb25zdCBmb3JtQWRkTmV3UHJvZmlsZSA9IGRvY3VtZW50LmZvcm1zW1wiZWRpdC1wcm9maWxlXCJdO1xyXG4vLyDQndCw0YXQvtC00LjQvCAxINC/0L7Qu9GPINGE0L7RgNC80Ysg0LIgRE9NIC8vXHJcbmNvbnN0IG5hbWVJbnB1dFByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X3R5cGVfbmFtZScpO1xyXG5jb25zdCBkZXNjcmlwdGlvbklucHV0UHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfdHlwZV9kZXNjcmlwdGlvbicpO1xyXG4vLyDQndCw0YXQvtC00LjQvCAyINGE0L7RgNC80YMg0LIgRE9NIC8vXHJcbmNvbnN0IGZvcm1BZGROZXdDYXJkID0gZG9jdW1lbnQuZm9ybXNbXCJuZXctcGxhY2VcIl07XHJcbi8vINCd0LDRhdC+0LTQuNC8IDIg0L/QvtC70Y8g0YTQvtGA0LzRiyDQsiBET00gLy9cclxuY29uc3QgbmFtZUlucHV0UGx1cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfdHlwZV9jYXJkLW5hbWUnKTtcclxuY29uc3QgZGVzY3JpcHRpb25JbnB1dFBsdXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X3R5cGVfdXJsJyk7XHJcbi8vIERPTSDRg9C30LvRiyAvL1xyXG5jb25zdCBjYXJkUGxhY2VMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBsYWNlc19fbGlzdCcpO1xyXG4vLyDQktGL0LLQvtC00LjQvCDQutCw0YDRgtC+0YfQutC4INC90LAg0YHRgtGA0LDQvdC40YbRgyAvL1xyXG4vLyBpbml0aWFsQ2FyZHMuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4vLyAgIGNhcmRQbGFjZUxpc3QuYXBwZW5kKGNyZWF0ZUNhcmQoaXRlbSwgZGVsZXRlQ2FyZCwgcHJlc3NMaWtlLCBzaG93Q2FyZCkpO1xyXG4vLyB9KTtcclxuXHJcbmZ1bmN0aW9uIHNob3dDYXJkIChpdGVtKSB7XHJcbiAgcG9wdXBJbWFnZS5zcmMgPSBpdGVtLmxpbms7XHJcbiAgcG9wdXBJbWFnZS5hbHQgPSBpdGVtLm5hbWU7XHJcbiAgcG9wdXBJbWFnZUNhcHRpb24udGV4dENvbnRlbnQgPSBpdGVtLm5hbWU7XHJcbiAgb3BlblBvcHVwKHBvcHVwVHlwZUltYWdlKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlRm9ybVN1Ym1pdFByb2ZpbGUoZXZ0KSB7XHJcbiAgICBcclxuICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICBwcm9maWxlVGl0bGUudGV4dENvbnRlbnQgPSBuYW1lSW5wdXRQcm9maWxlLnZhbHVlO1xyXG4gIHByb2ZpbGVEZXNjcmlwdGlvbi50ZXh0Q29udGVudCA9IGRlc2NyaXB0aW9uSW5wdXRQcm9maWxlLnZhbHVlO1xyXG4gIGVkaXRNeVByb2ZpbGUoXHJcbiAgICBuYW1lSW5wdXRQcm9maWxlLnZhbHVlLFxyXG4gICAgZGVzY3JpcHRpb25JbnB1dFByb2ZpbGUudmFsdWVcclxuICApXHJcbiAgLnRoZW4oKHJlc3VsdCkgPT4ge1xyXG4gICAgcHJvZmlsZVRpdGxlLnRleHRDb250ZW50ID0gcmVzdWx0Lm5hbWU7XHJcbiAgICBwcm9maWxlRGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSByZXN1bHQuYWJvdXQ7XHJcbiAgICBcclxuICAgIGV2dC50YXJnZXQucmVzZXQoKTtcclxuICAgIGNsb3NlUG9wdXAocG9wdXBUeXBlRWRpdCk7XHJcbiAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xyXG4gIH0pXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGhhbmRsZVN1Ym1pdEFkZE5ld0NhcmQoZXZ0KSB7XHJcblxyXG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIFxyXG4gIGNyZWF0ZUNhcmROZXcoe1xyXG4gICAgbmFtZTogbmFtZUlucHV0UGx1cy52YWx1ZSxcclxuICAgIGxpbms6IGRlc2NyaXB0aW9uSW5wdXRQbHVzLnZhbHVlLFxyXG4gIH0pXHJcbiAgLnRoZW4oKG5ld0NhcmQpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKG5ld0NhcmQpO1xyXG4gICAgY29uc3QgbmV3QWRkQ2FyZCA9IGNyZWF0ZUNhcmQobmV3Q2FyZCwgZGVsZXRlQ2FyZCwgcHJlc3NMaWtlLCBzaG93Q2FyZCk7XHJcbiAgICBjYXJkUGxhY2VMaXN0LnByZXBlbmQobmV3QWRkQ2FyZCk7XHJcbiAgXHJcbiAgICBldnQudGFyZ2V0LnJlc2V0KCk7XHJcbiAgICBjbG9zZVBvcHVwKHBvcHVwVHlwZU5ld0NhcmQpO1xyXG4gIH0pXHJcbn1cclxuXHJcbmZ1bmN0aW9uIG9wZW5Qb3B1cFByb2ZpbGUoKSB7XHJcbiAgbmFtZUlucHV0UHJvZmlsZS52YWx1ZSA9IHByb2ZpbGVUaXRsZS50ZXh0Q29udGVudFxyXG4gIGRlc2NyaXB0aW9uSW5wdXRQcm9maWxlLnZhbHVlID0gIHByb2ZpbGVEZXNjcmlwdGlvbi50ZXh0Q29udGVudDtcclxuICBjbGVhclZhbGlkYXRpb24ocG9wdXBUeXBlRWRpdCwgdmFsaWRhdGlvbkNvbmZpZyk7XHJcbiAgb3BlblBvcHVwKHBvcHVwVHlwZUVkaXQpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBvcGVuUG9wdXBBZGROZXdDYXJkKCkge1xyXG4gIGNsZWFyVmFsaWRhdGlvbihwb3B1cFR5cGVOZXdDYXJkLCB2YWxpZGF0aW9uQ29uZmlnKTtcclxuICBvcGVuUG9wdXAocG9wdXBUeXBlTmV3Q2FyZCk7XHJcbn1cclxuXHJcbmZvcm1BZGROZXdQcm9maWxlLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIGhhbmRsZUZvcm1TdWJtaXRQcm9maWxlKTtcclxuZm9ybUFkZE5ld0NhcmQuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgaGFuZGxlU3VibWl0QWRkTmV3Q2FyZCk7XHJcblxyXG5wcm9maWxlRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9wZW5Qb3B1cFByb2ZpbGUpO1xyXG5wcm9maWxlQWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgb3BlblBvcHVwQWRkTmV3Q2FyZCk7XHJcblxyXG5jb25zdCB2YWxpZGF0aW9uQ29uZmlnID0ge1xyXG4gIGZvcm1TZWxlY3RvcjogJy5wb3B1cF9fZm9ybScsXHJcbiAgaW5wdXRTZWxlY3RvcjogJy5wb3B1cF9faW5wdXQnLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiAnLnBvcHVwX19idXR0b24nLFxyXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6ICdwb3B1cF9fYnV0dG9uX2Rpc2FibGVkJyxcclxuICBpbnB1dEVycm9yQ2xhc3M6ICdwb3B1cF9faW5wdXRfdHlwZV9lcnJvcicsXHJcbiAgZXJyb3JDbGFzczogJ3BvcHVwX19lcnJvcl92aXNpYmxlJ1xyXG59O1xyXG5cclxuXHJcblByb21pc2UuYWxsKFtpbml0aWFsQ2FyZHMoKSwgZ2V0VXNlckRhdGEoKV0pLnRoZW4oKFtjYXJkcywgdXNlckRhdGFdKSA9PiB7XHJcbiAgcHJvZmlsZVRpdGxlLnRleHRDb250ZW50ID0gdXNlckRhdGEubmFtZTtcclxuICBwcm9maWxlRGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSB1c2VyRGF0YS5hYm91dDtcclxuICBjYXJkcy5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgICBjYXJkUGxhY2VMaXN0LmFwcGVuZChjcmVhdGVDYXJkKGl0ZW0sIGRlbGV0ZUNhcmQsIHByZXNzTGlrZSwgc2hvd0NhcmQpKTtcclxuICB9KTtcclxufSkuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgY29uc29sZS5sb2coZXJyb3IpO1xyXG59KVxyXG5cclxuY29uc3QgZWRpdE15UHJvZmlsZSA9IChpbnB1dE5hbWUsIGlucHV0RGVzY3JpcHRpb24pID0+IHtcclxuICByZXR1cm4gZmV0Y2goYCR7Y29uZmlnLmJhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgbWV0aG9kOiAnUEFUQ0gnLFxyXG4gICAgaGVhZGVyczogY29uZmlnLmhlYWRlcnMsXHJcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgIG5hbWU6IGlucHV0TmFtZSxcclxuICAgICAgYWJvdXQ6IGlucHV0RGVzY3JpcHRpb25cclxuICAgIH0pXHJcbiAgfSlcclxuXHJcbiAgLnRoZW4oKHJlc3VsdCkgPT4ge1xyXG4gICAgaWYgKHJlc3VsdC5vaykge1xyXG4gICAgICByZXR1cm4gcmVzdWx0Lmpzb24oKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChg0J7RiNC40LHQutCwOiAke3Jlc3VsdC5zdGF0dXN9YCk7XHJcbiAgICB9XHJcbiAgfSlcclxuICAvLyAudGhlbigocmVzdWx0KSA9PiB7XHJcbiAgLy8gICBwcm9maWxlVGl0bGUudGV4dENvbnRlbnQgPSByZXN1bHQubmFtZSxcclxuICAvLyAgIHByb2ZpbGVEZXNjcmlwdGlvbi50ZXh0Q29udGVudCA9IHJlc3VsdC5hYm91dCxcclxuICAvLyAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XHJcbiAgLy8gfSlcclxuICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgfSlcclxufVxyXG5cclxuY29uc3QgY2xpY2tPbkxpa2UgPSAoaWQpID0+IHtcclxuICAgIGZldGNoKGAke2NvbmZpZy5iYXNlVXJsfS9jYXJkcy9saWtlcy8ke2lkfWAsIHtcclxuICAgIG1ldGhvZDogJ1BVVCcsXHJcbiAgICBoZWFkZXJzOiBjb25maWcuaGVhZGVyc1xyXG4gIH0pXHJcblxyXG4gIC50aGVuKChyZXN1bHQpID0+IHtcclxuICAgIGlmIChyZXN1bHQub2spIHtcclxuICAgICAgcmV0dXJuIHJlc3VsdC5qc29uKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsDogJHtyZXN1bHQuc3RhdHVzfWApO1xyXG4gICAgfVxyXG4gIH0pXHJcbiAgLnRoZW4oKHJlc3VsdCkgPT4ge1xyXG4gICAgY29uc3QgbGlrZUJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19saWtlLWJ1dHRvbicpO1xyXG4gICAgY29uc3QgY2FyZENvdW50ZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9fY291bnRlcicpO1xyXG4gICAgbGlrZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdjYXJkX19saWtlLWJ1dHRvbl9pcy1hY3RpdmUnKTtcclxuICAgIGNhcmRDb3VudGVyLnRleHRDb250ZW50ID0gcmVzdWx0Lmxpa2VzLmxlbmd0aDtcclxuICB9KVxyXG4gIC5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICB9KVxyXG59XHJcbi8vIGNsaWNrT25MaWtlKCk7XHJcblxyXG5jb25zdCBkZWxldGVNeUNhcmQgPSAoZGF0YSkgPT4ge1xyXG4gIGZldGNoKGAke2NvbmZpZy5iYXNlVXJsfS9jYXJkcy9jYXJkSWRgLCB7XHJcbiAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4gICAgaGVhZGVyczogY29uZmlnLmhlYWRlcnMsXHJcbiAgICBcclxuICB9KVxyXG5cclxuICAudGhlbigocmVzdWx0KSA9PiB7XHJcbiAgICBpZiAocmVzdWx0Lm9rKSB7XHJcbiAgICAgIHJldHVybiByZXN1bHQuanNvbigpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LA6ICR7cmVzdWx0LnN0YXR1c31gKTtcclxuICAgIH1cclxuICB9KVxyXG4gIC50aGVuKChyZXN1bHQpID0+IHtcclxuICAgIFxyXG4gIH0pXHJcbiAgLmNhdGNoKChlcnJvcikgPT4ge1xyXG4gICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gIH0pXHJcbn1cclxuXHJcbmNvbnN0IHB1dExpa2UgPSAoZGF0YSkgPT4ge1xyXG4gIGZldGNoKGAke2NvbmZpZy5iYXNlVXJsfS9saWtlcy9jYXJkSWRgLCB7XHJcbiAgICBtZXRob2Q6ICdQVVQnLFxyXG4gICAgaGVhZGVyczogY29uZmlnLmhlYWRlcnMsXHJcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgIG5hbWU6IGRhdGEubmFtZSxcclxuICAgICAgYWJvdXQ6IGRhdGEuYWJvdXRcclxuICAgIH0pIFxyXG4gIH0pXHJcblxyXG4gIC50aGVuKChyZXN1bHQpID0+IHtcclxuICAgIGlmIChyZXN1bHQub2spIHtcclxuICAgICAgcmV0dXJuIHJlc3VsdC5qc29uKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsDogJHtyZXN1bHQuc3RhdHVzfWApO1xyXG4gICAgfVxyXG4gIH0pXHJcbiAgLnRoZW4oKHJlc3VsdCkgPT4ge1xyXG4gICAgXHJcbiAgfSlcclxuICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgfSlcclxufVxyXG5cclxuXHJcbmVuYWJsZVZhbGlkYXRpb24odmFsaWRhdGlvbkNvbmZpZyk7XHJcbi8vIGNvbnN0IGRlbGV0ZUxpa2UgPSAoZGF0YSkgPT4ge1xyXG4vLyAgIGZldGNoKGAke2NvbmZpZy5iYXNlVXJsfS9saWtlcy9jYXJkSWRgLCB7XHJcbi8vICAgICBtZXRob2Q6ICdERUxFVEUnLFxyXG4vLyAgICAgaGVhZGVyczogY29uZmlnLmhlYWRlcnMsXHJcbi8vICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbi8vICAgICAgIG5hbWU6IGRhdGEubmFtZSxcclxuLy8gICAgICAgYWJvdXQ6IGRhdGEuYWJvdXRcclxuLy8gICAgIH0pIFxyXG4vLyAgIH0pXHJcblxyXG4vLyAgIC50aGVuKChyZXN1bHQpID0+IHtcclxuLy8gICAgIGlmIChyZXN1bHQub2spIHtcclxuLy8gICAgICAgcmV0dXJuIHJlc3VsdC5qc29uKCk7XHJcbi8vICAgICB9IGVsc2Uge1xyXG4vLyAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsDogJHtyZXN1bHQuc3RhdHVzfWApO1xyXG4vLyAgICAgfVxyXG4vLyAgIH0pXHJcbi8vICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xyXG4gICAgXHJcbi8vICAgfSlcclxuLy8gICAuY2F0Y2goKGVycm9yKSA9PiB7XHJcbi8vICAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbi8vICAgfSlcclxuLy8gfSJdLCJuYW1lcyI6WyJvcGVuUG9wdXAiLCJwb3B1cCIsImNsYXNzTGlzdCIsImFkZCIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsb3NlRXNjUG9wdXAiLCJoYW5kbGVDbG9zZU1vZGFsV2luZG93T3ZlcmxheUNsaWNrIiwiZXZlbnQiLCJrZXkiLCJjbG9zZVBvcHVwIiwicXVlcnlTZWxlY3RvciIsImN1cnJlbnRUYXJnZXQiLCJ0YXJnZXQiLCJjb250YWlucyIsInJlbW92ZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJjcmVhdGVDYXJkIiwiaXRlbSIsImxpa2UiLCJzaG93IiwiY2FyZCIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJjYXJkSW1hZ2UiLCJzcmMiLCJsaW5rIiwiYWx0IiwibmFtZSIsInRleHRDb250ZW50IiwibGlrZXMiLCJsZW5ndGgiLCJkZWxldGVDYXJkIiwiZXZ0IiwiY2xvc2VzdCIsInByZXNzTGlrZSIsInRvZ2dsZSIsImhpZGVJbnB1dEVycm9yIiwiZm9ybUVsZW1lbnQiLCJpbnB1dEVsZW1lbnQiLCJ2YWxpZGF0aW9uQ29uZmlnIiwiZXJyb3JFbGVtZW50IiwiY29uY2F0IiwiaWQiLCJpbnB1dEVycm9yQ2xhc3MiLCJlcnJvckNsYXNzIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJpbnB1dExpc3QiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiYnV0dG9uRWxlbWVudCIsImNvbnNvbGUiLCJsb2ciLCJmb3JFYWNoIiwidmFsaWRpdHkiLCJwYXR0ZXJuTWlzbWF0Y2giLCJzZXRDdXN0b21WYWxpZGl0eSIsImRhdGFzZXQiLCJlcnJvck1lc3NhZ2UiLCJ2YWxpZCIsInNob3dJbnB1dEVycm9yIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJjaGVja0lucHV0VmFsaWRpdHkiLCJ0b2dnbGVCdXR0b25TdGF0ZSIsInNvbWUiLCJoYXNJbnZhbGlkSW5wdXQiLCJkaXNhYmxlZCIsImNsZWFyVmFsaWRhdGlvbiIsImlucHV0U2VsZWN0b3IiLCJjb25maWciLCJiYXNlVXJsIiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJwb3B1cFR5cGVFZGl0IiwicG9wdXBUeXBlTmV3Q2FyZCIsInBvcHVwVHlwZUltYWdlIiwicHJvZmlsZVRpdGxlIiwicHJvZmlsZURlc2NyaXB0aW9uIiwicHJvZmlsZUVkaXRCdXR0b24iLCJwcm9maWxlQWRkQnV0dG9uIiwicG9wdXBJbWFnZSIsInBvcHVwSW1hZ2VDYXB0aW9uIiwiZm9ybUFkZE5ld1Byb2ZpbGUiLCJmb3JtcyIsIm5hbWVJbnB1dFByb2ZpbGUiLCJkZXNjcmlwdGlvbklucHV0UHJvZmlsZSIsImZvcm1BZGROZXdDYXJkIiwibmFtZUlucHV0UGx1cyIsImRlc2NyaXB0aW9uSW5wdXRQbHVzIiwiY2FyZFBsYWNlTGlzdCIsInNob3dDYXJkIiwicHJldmVudERlZmF1bHQiLCJ2YWx1ZSIsImVkaXRNeVByb2ZpbGUiLCJ0aGVuIiwicmVzdWx0IiwiYWJvdXQiLCJyZXNldCIsImRhdGEiLCJmZXRjaCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5Iiwib2siLCJqc29uIiwiUHJvbWlzZSIsInJlamVjdCIsInN0YXR1cyIsIm5ld0NhcmQiLCJuZXdBZGRDYXJkIiwicHJlcGVuZCIsImZvcm1TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsImFsbCIsImNhdGNoIiwiZXJyb3IiLCJfcmVmIiwiX3JlZjIiLCJjYXJkcyIsInVzZXJEYXRhIiwiYXBwZW5kIiwiaW5wdXROYW1lIiwiaW5wdXREZXNjcmlwdGlvbiIsImVuYWJsZVZhbGlkYXRpb24iXSwic291cmNlUm9vdCI6IiJ9