(()=>{"use strict";function e(e){e.classList.add("popup_is-opened"),document.addEventListener("keydown",t),e.addEventListener("click",n)}function t(e){"Escape"===e.key&&r(document.querySelector(".popup_is-opened"))}function n(e){(e.currentTarget===e.target||e.target.classList.contains("popup__close"))&&r(e.currentTarget)}function r(e){e.classList.remove("popup_is-opened"),document.removeEventListener("keydown",t),e.removeEventListener("click",n)}function o(e,t,n,r){var o=document.querySelector("#card-template").content.querySelector(".card").cloneNode(!0),c=o.querySelector(".card__image");c.src=e.link,c.alt=e.name,c.addEventListener("click",(function(){r(e)})),o.querySelector(".card__delete-button").addEventListener("click",t);var a=o.querySelector(".card__description");a.querySelector(".card__title").textContent=e.name;var u=a.querySelector(".card__like-container");return u.querySelector(".card__counter").textContent=e.likes.length,u.querySelector(".card__like-button").addEventListener("click",n),o}function c(e){e.target.closest(".card").remove()}function a(e){e.target.closest(".card__like-button").classList.toggle("card__like-button_is-active")}var u=function(e,t){!function(e){return e.some((function(e){return!e.validity.valid}))}(e)?(t.disabled=!1,t.classList.remove("popup__button_disabled")):(t.disabled=!0,t.classList.add("popup__button_disabled"))},i={baseUrl:"https://nomoreparties.co/v1/wff-cohort-2",headers:{authorization:"bb1fee31-957c-4b3e-9d5c-e5a39df6a8a4","Content-Type":"application/json"}};function l(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var s=document.querySelector(".popup_type_edit");s.classList.add("popup_is-animated");var d=document.querySelector(".popup_type_new-card");d.classList.add("popup_is-animated");var p=document.querySelector(".popup_type_image");p.classList.add("popup_is-animated"),document.querySelector(".card__like-button");var _=document.querySelector(".profile__title"),f=document.querySelector(".profile__description"),m=document.querySelector(".profile__edit-button"),y=document.querySelector(".profile__add-button"),v=document.querySelector(".popup__image"),h=document.querySelector(".popup__caption"),b=document.forms["edit-profile"],S=document.querySelector(".popup__input_type_name"),g=document.querySelector(".popup__input_type_description"),q=document.forms["new-place"],k=document.querySelector(".popup__input_type_card-name"),L=document.querySelector(".popup__input_type_url"),E=document.querySelector(".places__list");function C(t){v.src=t.link,v.alt=t.name,h.textContent=t.name,e(p)}b.addEventListener("submit",(function(e){e.preventDefault(),j({name:S.value,about:g.value}),e.target.reset(),r(s)})),q.addEventListener("submit",(function(e){var t;e.preventDefault(),t={name:k.value,link:L.value},fetch("".concat(i.baseUrl,"/cards"),{method:"POST",headers:i.headers,body:JSON.stringify(t)}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).then((function(e){console.log(e)})).catch((function(e){console.log(e)}));var n=o({name:k.value,link:L.value},c,a,C);E.prepend(n),e.target.reset(),r(d)})),m.addEventListener("click",(function(){S.value=_.textContent,g.value=f.textContent,e(s)})),y.addEventListener("click",(function(){e(d)})),Array.from(document.querySelectorAll(".popup__form")).forEach((function(e){e.addEventListener("submit",(function(e){e.preventDefault()})),function(e){var t=Array.from(e.querySelectorAll(".popup__input")),n=e.querySelector(".popup__button");u(t,n),t.forEach((function(r){r.addEventListener("input",(function(){!function(e,t){t.validity.patternMismatch?t.setCustomValidity(t.dataset.errorMessage):t.setCustomValidity(""),t.validity.valid?function(e,t){var n=e.querySelector(".".concat(t.id,"-error"));t.classList.remove("popup__input_type_error"),n.classList.remove("popup__error_visible"),n.textContent=""}(e,t):function(e,t,n){var r=e.querySelector(".".concat(t.id,"-error"));t.classList.add("popup__input_type_error"),r.textContent=n,r.classList.add("popup__error_visible")}(e,t,t.validationMessage)}(e,r),u(t,n)}))}))}(e)})),Promise.all([fetch("".concat(i.baseUrl,"/cards"),{method:"GET",headers:i.headers}).then((function(e){return e.json()})),fetch("".concat(i.baseUrl,"/users/me"),{method:"GET",headers:i.headers}).then((function(e){return e.json()})).catch((function(e){console.log(e)}))]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,c,a,u=[],i=!0,l=!1;try{if(c=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;i=!1}else for(;!(i=(r=c.call(n)).done)&&(u.push(r.value),u.length!==t);i=!0);}catch(e){l=!0,o=e}finally{try{if(!i&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(l)throw o}}return u}}(t,n)||function(e,t){if(e){if("string"==typeof e)return l(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?l(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),u=r[0];r[1],u.forEach((function(e){E.append(o(e,c,a,C))}))})).catch((function(e){console.log(e)}));var j=function(e){fetch("".concat(i.baseUrl,"/users/me"),{method:"PATCH",headers:i.headers,body:JSON.stringify({name:e.name,about:e.about})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).then((function(e){_.textContent=e.name,f.textContent=e.about,console.log(e)})).catch((function(e){console.log(e)}))};fetch("".concat(i.baseUrl,"/cards/likes/657de88f0083b561d572b851"),{method:"PUT",headers:i.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})).then((function(e){var t=document.querySelector(".card__like-button"),n=document.querySelector(".card__counter");t.classList.add("card__like-button_is-active"),n.textContent=e.likes.length})).catch((function(e){console.log(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,