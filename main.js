(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};function t(e){e.classList.add("popup_is-opened"),document.addEventListener("keydown",n),e.addEventListener("click",r)}function n(e){"Escape"===e.key&&o(document.querySelector(".popup_is-opened"))}function r(e){(e.currentTarget===e.target||e.target.classList.contains("popup__close"))&&o(e.currentTarget)}function o(e){e.classList.remove("popup_is-opened"),document.removeEventListener("keydown",n),e.removeEventListener("click",r)}function a(e,t,n,r,o){var a=P.querySelector(".card").cloneNode(!0);a.id=e._id;var c=a.querySelector(".card__image");c.src=e.link,c.alt=e.name;var i=a.querySelector(".card__delete-button");a.querySelector(".card__description").querySelector(".card__title").textContent=e.name;var u=e.likes,l=a.querySelector(".card__counter"),s=a.querySelector(".card__like-button");function d(){a.remove()}e.owner._id!==o&&(i.style.visibility="hidden");var p=function(){return u.some((function(e){return e._id===o}))},f=function(e){u=e,m()},m=function(){p()?s.classList.add("card__like-button_is-active"):s.classList.remove("card__like-button_is-active"),l.textContent=u.length};return m(),s.addEventListener("click",(function(){return t(e._id,p(),f)})),i.addEventListener("click",(function(){return n(e._id,d)})),c.addEventListener("click",(function(){return r(e)})),a}e.d({},{O:()=>P});var c=function(e,t,n){var r=e.querySelector(".".concat(t.id,"-error"));t.classList.remove(n.inputErrorClass),r.classList.remove(n.errorClass),r.textContent=""},i=function(e,t){e.classList.add(t.inactiveButtonClass),e.disabled=!0},u=function(e,t,n){!function(e){return e.some((function(e){return!e.validity.valid}))}(e)?(t.classList.remove(n.inactiveButtonClass),t.disabled=!1):i(t,n)},l=function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector);n.forEach((function(t,n){c(e,t,n)})),i(r,t)},s={baseUrl:"https://nomoreparties.co/v1/wff-cohort-2",headers:{authorization:"bb1fee31-957c-4b3e-9d5c-e5a39df6a8a4","Content-Type":"application/json"}};function d(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}function p(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var f=document.querySelector(".popup_type_edit");f.classList.add("popup_is-animated");var m=document.querySelector(".popup_type_new-card");m.classList.add("popup_is-animated");var _=document.querySelector(".popup_type_avatar");_.classList.add("popup_is-animated");var v=document.querySelector(".popup_type_image");v.classList.add("popup_is-animated");var y=document.querySelector(".profile__title"),h=document.querySelector(".profile__description"),b=document.querySelector(".profile__avatar"),S=document.querySelector(".profile__edit-button"),q=document.querySelector(".profile__add-button"),g=document.querySelector(".profile__avatar-button"),E=document.querySelector(".popup__image"),L=document.querySelector(".popup__caption"),C="",k=document.forms["edit-profile"],A=document.querySelector(".popup__input_type_name"),x=document.querySelector(".popup__input_type_description"),O=document.forms["new-place"],T=document.querySelector(".popup__input_type_card-name"),w=document.querySelector(".popup__input_type_url"),j=document.forms["edit-avatar"],U=document.querySelector(".popup__input_type_avatar"),P=document.querySelector("#card-template").content,B=document.querySelector(".places__list"),D={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function I(e,t){e.textContent=t}function M(e,t,n){(function(e,t){return fetch("".concat(s.baseUrl,"/cards/likes/").concat(e),{method:t?"DELETE":"PUT",headers:s.headers}).then(d)})(e,t).then((function(e){n(e.likes)})).catch((function(e){console.log(e)}))}function N(e,t){var n;(n=e,fetch("".concat(s.baseUrl,"/cards/").concat(n),{method:"DELETE",headers:s.headers}).then(d)).then((function(){t()})).catch((function(e){console.log(e)}))}function J(e){E.src=e.link,E.alt=e.name,L.textContent=e.name,t(v)}Promise.all([fetch("".concat(s.baseUrl,"/cards"),{method:"GET",headers:s.headers}).then(d),fetch("".concat(s.baseUrl,"/users/me"),{method:"GET",headers:s.headers}).then(d)]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,c,i=[],u=!0,l=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=a.call(n)).done)&&(i.push(r.value),i.length!==t);u=!0);}catch(e){l=!0,o=e}finally{try{if(!u&&null!=n.return&&(c=n.return(),Object(c)!==c))return}finally{if(l)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return p(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?p(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],c=r[1];C=c._id,y.textContent=c.name,h.textContent=c.about,b.style.backgroundImage="url(".concat(c.avatar,")"),o.forEach((function(e){B.append(a(e,M,N,J,C))}))})).catch((function(e){console.log(e)})),function(e){Array.from(document.querySelectorAll(e.formSelector)).forEach((function(t){!function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector);u(n,r,t),n.forEach((function(o){o.addEventListener("input",(function(){!function(e,t,n){t.validity.patternMismatch?t.setCustomValidity(t.dataset.errorMessage):t.setCustomValidity(""),t.validity.valid?c(e,t,n):function(e,t,n,r){var o=e.querySelector(".".concat(t.id,"-error"));t.classList.add(r.inputErrorClass),o.textContent=n,o.classList.add(r.errorClass)}(e,t,t.validationMessage,n)}(e,o,t),u(n,r,t)}))}))}(t,e)}))}(D),k.addEventListener("submit",(function(e){var t,n;I(e.submitter,"Сохранение..."),e.preventDefault(),(t=A.value,n=x.value,fetch("".concat(s.baseUrl,"/users/me"),{method:"PATCH",headers:s.headers,body:JSON.stringify({name:t,about:n})}).then(d)).then((function(t){y.textContent=t.name,h.textContent=t.about,e.target.reset(),o(f)})).catch((function(e){console.log(e)})).finally((function(){return I(e.submitter,"Сохранить")}))})),O.addEventListener("submit",(function(e){var t;I(e.submitter,"Сохранение..."),e.preventDefault(),(t={name:T.value,link:w.value},fetch("".concat(s.baseUrl,"/cards"),{method:"POST",headers:s.headers,body:JSON.stringify(t)}).then(d)).then((function(t){var n=a(t,M,N,J,C);T.value="",w.value="",B.prepend(n),e.target.reset(),o(m)})).catch((function(e){console.log(e)})).finally((function(){return I(e.submitter,"Сохранить")}))})),j.addEventListener("submit",(function(e){var t;I(e.submitter,"Сохранение..."),e.preventDefault(),(t={avatar:U.value},fetch("".concat(s.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:s.headers,body:JSON.stringify(t)}).then(d)).then((function(e){b.style="background-image: url(".concat(e.avatar,")"),o(_)})).catch((function(e){console.log(e)})).finally((function(){return I(e.submitter,"Сохранить")}))})),S.addEventListener("click",(function(){t(f),A.value=y.textContent,x.value=h.textContent,l(f,D)})),q.addEventListener("click",(function(){t(m),l(m,D)})),g.addEventListener("click",(function(){l(_,D),t(_),U.value=""}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,