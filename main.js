(()=>{"use strict";function e(e){e.classList.add("popup_is-opened"),document.addEventListener("keydown",t),e.addEventListener("click",n)}function t(e){"Escape"===e.key&&r(document.querySelector(".popup_is-opened"))}function n(e){(e.currentTarget===e.target||e.target.classList.contains("popup__close"))&&r(e.currentTarget)}function r(e){e.classList.remove("popup_is-opened"),document.removeEventListener("keydown",t),e.removeEventListener("click",n)}function o(e,t,n,r,o){var c=document.querySelector("#card-template").content.querySelector(".card").cloneNode(!0);c.id=e._id;var a=c.querySelector(".card__image");a.src=e.link,a.alt=e.name;var u=c.querySelector(".card__delete-button");c.querySelector(".card__description").querySelector(".card__title").textContent=e.name;var i=e.likes,s=c.querySelector(".card__counter"),l=c.querySelector(".card__like-button");function d(){c.remove()}e.owner._id!==o&&(u.style.visibility="hidden");var p=function(){return i.some((function(e){return e._id===o}))},f=function(e){i=e,m()},m=function(){p()?l.classList.add("card__like-button_is-active"):l.classList.remove("card__like-button_is-active"),s.textContent=i.length};return m(),l.addEventListener("click",(function(){return t(e._id,p(),f)})),u.addEventListener("click",(function(){return n(e._id,d)})),a.addEventListener("click",(function(){return r(e)})),c}var c=function(e,t,n){var r=e.querySelector(".".concat(t.id,"-error"));t.classList.remove(n.inputErrorClass),r.classList.remove(n.errorClass),r.textContent=""},a=function(e,t,n){!function(e){return e.some((function(e){return!e.validity.valid}))}(e)?(t.classList.remove(n.inactiveButtonClass),t.disabled=!1):(t.classList.add(n.inactiveButtonClass),t.disabled=!0)},u=function(e,t){Array.from(e.querySelectorAll(t.inputSelector)).forEach((function(t,n){c(e,t,n)}))},i={baseUrl:"https://nomoreparties.co/v1/wff-cohort-2",headers:{authorization:"bb1fee31-957c-4b3e-9d5c-e5a39df6a8a4","Content-Type":"application/json"}};function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var l=document.querySelector(".popup_type_edit");l.classList.add("popup_is-animated");var d=document.querySelector(".popup_type_new-card");d.classList.add("popup_is-animated");var p=document.querySelector(".popup_type_avatar");p.classList.add("popup_is-animated");var f=document.querySelector(".popup_type_image");f.classList.add("popup_is-animated");var m=document.querySelector(".profile__title"),_=document.querySelector(".profile__description"),v=document.querySelector(".profile__avatar"),y=document.querySelector(".profile__edit-button"),h=document.querySelector(".profile__add-button"),b=document.querySelector(".profile__avatar-button"),S=document.querySelector(".popup__image"),q=document.querySelector(".popup__caption"),g="",E="",L=document.forms["edit-profile"],k=document.querySelector(".popup__input_type_name"),C=document.querySelector(".popup__input_type_description"),j=document.forms["new-place"],A=document.querySelector(".popup__input_type_card-name"),x=document.querySelector(".popup__input_type_url"),P=document.forms["edit-avatar"],T=document.querySelector(".popup__input_type_avatar"),w=document.querySelector(".places__list"),U={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function O(e,t){e.textContent=t}function B(e,t,n){(function(e,t){return fetch("".concat(i.baseUrl,"/cards/likes/").concat(e),{method:t?"DELETE":"PUT",headers:i.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))})(e,t).then((function(e){n(e.likes)})).catch((function(e){console.log(e)}))}function D(e,t){var n;(n=e,fetch("".concat(i.baseUrl,"/cards/").concat(n),{method:"DELETE",headers:i.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))).then((function(e){t(e)})).catch((function(e){console.log(e)}))}function I(t){S.src=t.link,S.alt=t.name,q.textContent=t.name,e(f)}Promise.all([fetch("".concat(i.baseUrl,"/cards"),{method:"GET",headers:i.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))})),fetch("".concat(i.baseUrl,"/users/me"),{method:"GET",headers:i.headers}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,c,a,u=[],i=!0,s=!1;try{if(c=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;i=!1}else for(;!(i=(r=c.call(n)).done)&&(u.push(r.value),u.length!==t);i=!0);}catch(e){s=!0,o=e}finally{try{if(!i&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(s)throw o}}return u}}(t,n)||function(e,t){if(e){if("string"==typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),c=r[0],a=r[1];g=a.avatar,E=a._id,m.textContent=a.name,_.textContent=a.about,v.style.backgroundImage="url(".concat(a.avatar,")"),c.forEach((function(e){w.append(o(e,B,D,I,E))}))})).catch((function(e){console.log(e)})),function(e){Array.from(document.querySelectorAll(e.formSelector)).forEach((function(t){!function(e,t){var n=Array.from(e.querySelectorAll(t.inputSelector)),r=e.querySelector(t.submitButtonSelector);a(n,r,t),n.forEach((function(o){o.addEventListener("input",(function(){!function(e,t,n){t.validity.patternMismatch?t.setCustomValidity(t.dataset.errorMessage):t.setCustomValidity(""),t.validity.valid?c(e,t,n):function(e,t,n,r){var o=e.querySelector(".".concat(t.id,"-error"));t.classList.add(r.inputErrorClass),o.textContent=n,o.classList.add(r.errorClass)}(e,t,t.validationMessage,n)}(e,o,t),a(n,r,t)}))}))}(t,e)}))}(U),L.addEventListener("submit",(function(e){var t,n;O(e.submitter,"Сохранение..."),e.preventDefault(),(t=k.value,n=C.value,fetch("".concat(i.baseUrl,"/users/me"),{method:"PATCH",headers:i.headers,body:JSON.stringify({name:t,about:n})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))).then((function(t){m.textContent=t.name,_.textContent=t.about,e.target.reset(),r(l)})).catch((function(e){console.log(e)}))})),j.addEventListener("submit",(function(e){var t;O(e.submitter,"Сохранение..."),e.preventDefault(),(t={name:A.value,link:x.value},fetch("".concat(i.baseUrl,"/cards"),{method:"POST",headers:i.headers,body:JSON.stringify(t)}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))).then((function(t){var n=o(t,B,D,I,E);A.value="",x.value="",w.prepend(n),e.target.reset(),r(d)})).catch((function(e){console.log(e)}))})),P.addEventListener("submit",(function(e){var t;O(e.submitter,"Сохранение..."),e.preventDefault(),(t={avatar:T.value},fetch("".concat(i.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:i.headers,body:JSON.stringify(t)}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))).then((function(e){v.style="background-image: url(".concat(e.avatar,")"),g=e.avatar,r(p)})).catch((function(e){console.log(e)}))})),y.addEventListener("click",(function(){e(l),k.value=m.textContent,C.value=_.textContent,u(l,U)})),h.addEventListener("click",(function(){e(d),u(d,U)})),b.addEventListener("click",(function(){u(p,U),e(p),T.value=g}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,